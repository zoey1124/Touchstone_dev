                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=191670.41..192488.44 rows=6054 width=116)
   Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
   ->  Gather Merge  (cost=191670.41..192334.58 rows=5044 width=116)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=190670.39..190752.35 rows=2522 width=116)
               Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               ->  Sort  (cost=190670.39..190676.69 rows=2522 width=96)
                     Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                     ->  Parallel Hash Join  (cost=4849.30..190527.89 rows=2522 width=96)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)) OR ((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
                           ->  Nested Loop  (cost=365.53..185770.12 rows=60612 width=46)
                                 ->  Hash Join  (cost=365.10..154743.35 rows=60612 width=46)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..150930.96 rows=757646 width=24)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=355.10..355.10 rows=800 width=30)
                                             ->  Hash Join  (cost=1.40..355.10 rows=800 width=30)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                                               Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=8)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                           ->  Parallel Hash  (cost=4421.27..4421.27 rows=5000 width=30)
                                 ->  Hash Join  (cost=1.40..4421.27 rows=5000 width=30)
                                       Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4228.00 rows=62500 width=8)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                             ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'FRANCE'::bpchar))
(32 rows)

