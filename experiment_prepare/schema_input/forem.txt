T[ahoy_events; 2000; id, integer; name, varchar; properties, varchar; "time", datetime; user_id, integer; visit_id, integer; p(id)]
T[ahoy_messages; 2000; id, integer; clicked_at, datetime; content, varchar; feedback_message_id, integer; mailer, varchar; sent_at, datetime; subject, varchar; "to", varchar; token, varchar; user_id, integer; user_type, varchar; utm_campaign, varchar; utm_content, varchar; utm_medium, varchar; utm_source, varchar; utm_term, varchar; p(id)]
T[ahoy_visits; 2000; id, integer; started_at, datetime; user_id, integer; visit_token, varchar; visitor_token, varchar; p(id)]
T[announcements; 2000; id, integer; banner_style, varchar; created_at, datetime; updated_at, datetime; p(id)]
T[api_secrets; 2000; id, integer; created_at, datetime; description, varchar; secret, varchar; updated_at, datetime; user_id, integer; p(id)]
T[ar_internal_metadata; 2000; "key", varchar; "value", varchar; created_at, datetime; updated_at, datetime; p(id)]
T[articles; 2000; id, integer; any_comments_hidden, bool; approved, bool; archived, bool; body_html, varchar; body_markdown, varchar; boost_states, varchar; cached_organization, varchar; cached_tag_list, varchar; cached_user, varchar; cached_user_name, varchar; cached_user_username, varchar; canonical_url, varchar; co_author_ids, varchar; collection_id, integer; comment_score, integer; comment_template, varchar; comments_count, integer; created_at, datetime; crossposted_at, datetime; description, varchar; edited_at, datetime; email_digest_eligible, bool; experience_level_rating, decimal; experience_level_rating_distribution, decimal; featured, bool; featured_number, integer; feed_source_url, varchar; hotness_score, integer; last_comment_at, datetime; last_experience_level_rating_at, datetime; main_image, varchar; main_image_background_hex_color, varchar; nth_published_by_author, integer; organic_page_views_count, integer; organic_page_views_past_month_count, integer; organic_page_views_past_week_count, integer; organization_id, integer; originally_published_at, datetime; page_views_count, integer; password, varchar; "path", varchar; positive_reactions_count, integer; previous_positive_reactions_count, integer; previous_public_reactions_count, integer; processed_html, varchar; public_reactions_count, integer; published, bool; published_at, datetime; published_from_feed, bool; rating_votes_count, integer; reactions_count, integer; reading_list_document, varchar; reading_time, integer; receive_notifications, bool; score, integer; search_optimized_description_replacement, varchar; search_optimized_title_preamble, varchar; show_comments, bool; slug, varchar; social_image, varchar; spaminess_rating, integer; title, varchar; updated_at, datetime; user_id, integer; user_subscriptions_count, integer; video, varchar; video_closed_caption_track_url, varchar; video_code, varchar; video_duration_in_seconds, decimal; video_source_url, varchar; video_state, varchar; video_thumbnail_url, varchar; p(id)]
T[articles_storage; 2000; id, integer; any_comments_hidden, bool; approved, bool; archived, bool; body_html, varchar; body_markdown, varchar; boost_states, varchar; cached_organization, varchar; cached_tag_list, varchar; cached_user, varchar; cached_user_name, varchar; cached_user_username, varchar; canonical_url, varchar; co_author_ids, varchar; collection_id, integer; comment_score, integer; comment_template, varchar; comments_count, integer; created_at, datetime; crossposted_at, datetime; description, varchar; edited_at, datetime; email_digest_eligible, bool; experience_level_rating, decimal; experience_level_rating_distribution, decimal; featured, bool; featured_number, integer; feed_source_url, varchar; hotness_score, integer; last_comment_at, datetime; last_experience_level_rating_at, datetime; main_image, varchar; main_image_background_hex_color, varchar; nth_published_by_author, integer; organic_page_views_count, integer; organic_page_views_past_month_count, integer; organic_page_views_past_week_count, integer; organization_id, integer; originally_published_at, datetime; page_views_count, integer; password, varchar; "path", varchar; positive_reactions_count, integer; previous_positive_reactions_count, integer; previous_public_reactions_count, integer; processed_html, varchar; public_reactions_count, integer; published, bool; published_at, datetime; published_from_feed, bool; rating_votes_count, integer; reactions_count, integer; reading_list_document, varchar; reading_time, integer; receive_notifications, bool; score, integer; search_optimized_description_replacement, varchar; search_optimized_title_preamble, varchar; show_comments, bool; slug, varchar; social_image, varchar; spaminess_rating, integer; title, varchar; updated_at, datetime; user_id, integer; user_subscriptions_count, integer; video, varchar; video_closed_caption_track_url, varchar; video_code, varchar; video_duration_in_seconds, decimal; video_source_url, varchar; video_state, varchar; video_thumbnail_url, varchar; p(id)]
T[audit_logs; 2000; id, integer; category, varchar; created_at, datetime; data, varchar; roles, varchar; slug, varchar; updated_at, datetime; user_id, integer; p(id)]
T[badge_achievements; 2000; id, integer; badge_id, integer; created_at, datetime; rewarder_id, integer; rewarding_context_message, varchar; rewarding_context_message_markdown, varchar; updated_at, datetime; user_id, integer; p(id)]
T[badges; 2000; id, integer; badge_image, varchar; created_at, datetime; credits_awarded, integer; description, varchar; slug, varchar; title, varchar; updated_at, datetime; p(id)]
T[banished_users; 2000; id, integer; banished_by_id, integer; created_at, datetime; updated_at, datetime; username, varchar; p(id)]
T[blazer_audits; 2000; id, integer; created_at, datetime; data_source, varchar; query_id, integer; statement, varchar; user_id, integer; p(id)]
T[blazer_checks; 2000; id, integer; check_type, varchar; created_at, datetime; creator_id, integer; emails, varchar; last_run_at, datetime; message, varchar; query_id, integer; schedule, varchar; slack_channels, varchar; state, varchar; updated_at, datetime; p(id)]
T[blazer_dashboard_queries; 2000; id, integer; created_at, datetime; dashboard_id, integer; "position", integer; query_id, integer; updated_at, datetime; p(id)]
T[blazer_dashboards; 2000; id, integer; created_at, datetime; creator_id, integer; name, varchar; updated_at, datetime; p(id)]
T[blazer_queries; 2000; id, integer; created_at, datetime; creator_id, integer; data_source, varchar; description, varchar; name, varchar; statement, varchar; updated_at, datetime; p(id)]
T[broadcasts; 2000; id, integer; active, bool; active_status_updated_at, datetime; banner_style, varchar; body_markdown, varchar; broadcastable_id, integer; broadcastable_type, varchar; created_at, datetime; processed_html, varchar; title, varchar; type_of, varchar; updated_at, datetime; p(id)]
T[broadcasts_new; 2000; id, integer; active, bool; active_status_updated_at, datetime; banner_style, varchar; body_markdown, varchar; broadcastable_id, integer; broadcastable_type, varchar; created_at, datetime; processed_html, varchar; title, varchar; type_of_int, varchar; updated_at, datetime; p(id)]
T[broadcasts_storage; 2000; id, integer; active, bool; active_status_updated_at, datetime; banner_style, varchar; body_markdown, varchar; broadcastable_id, integer; broadcastable_type, varchar; created_at, datetime; processed_html, varchar; title, varchar; type_of, varchar; updated_at, datetime; p(id)]
T[chat_channel_memberships; 2000; id, integer; chat_channel_id, integer; created_at, datetime; has_unopened_messages, bool; last_opened_at, datetime; "role", varchar; show_global_badge_notification, bool; status, varchar; updated_at, datetime; user_id, integer; p(id)]
T[chat_channel_memberships_new; 2000; id, integer; chat_channel_id, integer; created_at, datetime; has_unopened_messages, bool; last_opened_at, datetime; "role", varchar; show_global_badge_notification, bool; status_int, varchar; updated_at, datetime; user_id, integer; p(id)]
T[chat_channel_memberships_storage; 2000; id, integer; chat_channel_id, integer; created_at, datetime; has_unopened_messages, bool; last_opened_at, datetime; "role", varchar; show_global_badge_notification, bool; status, varchar; updated_at, datetime; user_id, integer; p(id)]
T[chat_channels; 2000; id, integer; channel_name, varchar; channel_type, varchar; created_at, datetime; description, varchar; discoverable, bool; last_message_at, datetime; slug, varchar; status, varchar; updated_at, datetime; p(id)]
T[chat_channels_storage; 2000; id, integer; channel_name, varchar; channel_type, varchar; created_at, datetime; description, varchar; discoverable, bool; last_message_at, datetime; slug, varchar; status, varchar; updated_at, datetime; p(id)]
T[classified_listing_categories; 2000; id, integer; cost, integer; created_at, datetime; name, varchar; rules, varchar; slug, varchar; social_preview_color, varchar; social_preview_description, varchar; updated_at, datetime; p(id)]
T[classified_listings; 2000; id, integer; body_markdown, varchar; bumped_at, datetime; cached_tag_list, varchar; classified_listing_category_id, integer; contact_via_connect, bool; created_at, datetime; expires_at, datetime; location, varchar; organization_id, integer; originally_published_at, datetime; processed_html, varchar; published, bool; slug, varchar; title, varchar; updated_at, datetime; user_id, integer; p(id)]
T[collections; 2000; id, integer; created_at, datetime; description, varchar; main_image, varchar; organization_id, integer; published, bool; slug, varchar; social_image, varchar; title, varchar; updated_at, datetime; user_id, integer; p(id)]
T[comments; 2000; id, integer; ancestry, varchar; body_html, varchar; body_markdown, varchar; commentable_id, integer; commentable_type, varchar; created_at, datetime; deleted, bool; edited, bool; edited_at, datetime; hidden_by_commentable_user, bool; id_code, varchar; markdown_character_count, integer; positive_reactions_count, integer; processed_html, varchar; public_reactions_count, integer; reactions_count, integer; receive_notifications, bool; score, integer; spaminess_rating, integer; updated_at, datetime; user_id, integer; p(id)]
T[comments_new; 2000; id, integer; ancestry, varchar; body_html, varchar; body_markdown, varchar; commentable_id, integer; commentable_type_int, varchar; created_at, datetime; deleted, bool; edited, bool; edited_at, datetime; hidden_by_commentable_user, bool; id_code, varchar; markdown_character_count, integer; positive_reactions_count, integer; processed_html, varchar; public_reactions_count, integer; reactions_count, integer; receive_notifications, bool; score, integer; spaminess_rating, integer; updated_at, datetime; user_id, integer; p(id)]
T[comments_storage; 2000; id, integer; ancestry, varchar; body_html, varchar; body_markdown, varchar; commentable_id, integer; commentable_type, varchar; created_at, datetime; deleted, bool; edited, bool; edited_at, datetime; hidden_by_commentable_user, bool; id_code, varchar; markdown_character_count, integer; positive_reactions_count, integer; processed_html, varchar; public_reactions_count, integer; reactions_count, integer; receive_notifications, bool; score, integer; spaminess_rating, integer; updated_at, datetime; user_id, integer; p(id)]
T[consumer_apps; 2000; id, integer; active, bool; app_bundle, varchar; auth_key, varchar; created_at, datetime; last_error, varchar; platform, varchar; team_id, varchar; updated_at, datetime; p(id)]
T[consumer_apps_storage; 2000; id, integer; active, bool; app_bundle, varchar; auth_key, varchar; created_at, datetime; last_error, varchar; platform, varchar; team_id, varchar; updated_at, datetime; p(id)]
T[credits; 2000; id, integer; cost, decimal; created_at, datetime; organization_id, integer; purchase_id, integer; purchase_type, varchar; spent, bool; spent_at, datetime; updated_at, datetime; user_id, integer; p(id)]
T[credits_storage; 2000; id, integer; cost, decimal; created_at, datetime; organization_id, integer; purchase_id, integer; purchase_type, varchar; spent, bool; spent_at, datetime; updated_at, datetime; user_id, integer; p(id)]
T[data_update_scripts; 2000; id, integer; created_at, datetime; error, varchar; file_name, varchar; finished_at, datetime; run_at, datetime; status, integer; updated_at, datetime; p(id)]
T[devices; 2000; id, integer; app_bundle, varchar; consumer_app_id, integer; created_at, datetime; platform, varchar; token, varchar; updated_at, datetime; user_id, integer; p(id)]
T[devices_storage; 2000; id, integer; app_bundle, varchar; consumer_app_id, integer; created_at, datetime; platform, varchar; token, varchar; updated_at, datetime; user_id, integer; p(id)]
T[discussion_locks; 2000; id, integer; article_id, integer; created_at, datetime; locking_user_id, integer; notes, varchar; reason, varchar; updated_at, datetime; p(id)]
T[display_ad_events; 2000; id, integer; category, varchar; context_type, varchar; created_at, datetime; display_ad_id, integer; updated_at, datetime; user_id, integer; p(id)]
T[display_ad_events_storage; 2000; id, integer; category, varchar; context_type, varchar; created_at, datetime; display_ad_id, integer; updated_at, datetime; user_id, integer; p(id)]
T[display_ads; 2000; id, integer; approved, bool; body_markdown, varchar; clicks_count, integer; created_at, datetime; impressions_count, integer; organization_id, integer; placement_area, varchar; processed_html, varchar; published, bool; success_rate, decimal; updated_at, datetime; p(id)]
T[display_ads_new; 2000; id, integer; approved, bool; body_markdown, varchar; clicks_count, integer; created_at, datetime; impressions_count, integer; organization_id, integer; placement_area_int, varchar; processed_html, varchar; published, bool; success_rate, decimal; updated_at, datetime; p(id)]
T[display_ads_storage; 2000; id, integer; approved, bool; body_markdown, varchar; clicks_count, integer; created_at, datetime; impressions_count, integer; organization_id, integer; placement_area, varchar; processed_html, varchar; published, bool; success_rate, decimal; updated_at, datetime; p(id)]
T[email_authorizations; 2000; id, integer; confirmation_token, varchar; created_at, datetime; json_data, varchar; type_of, varchar; updated_at, datetime; user_id, integer; verified_at, datetime; p(id)]
T[email_authorizations_storage; 2000; id, integer; confirmation_token, varchar; created_at, datetime; json_data, varchar; type_of, varchar; updated_at, datetime; user_id, integer; verified_at, datetime; p(id)]
T[events; 2000; id, integer; category, varchar; cover_image, varchar; created_at, datetime; description_html, varchar; description_markdown, varchar; ends_at, datetime; host_name, varchar; live_now, bool; location_name, varchar; location_url, varchar; profile_image, varchar; published, bool; slug, varchar; starts_at, datetime; title, varchar; updated_at, datetime; p(id)]
T[feedback_messages; 2000; id, integer; affected_id, integer; category, varchar; created_at, datetime; feedback_type, varchar; message, varchar; offender_id, integer; reported_url, varchar; reporter_id, integer; status, varchar; updated_at, datetime; p(id)]
T[feedback_messages_storage; 2000; id, integer; affected_id, integer; category, varchar; created_at, datetime; feedback_type, varchar; message, varchar; offender_id, integer; reported_url, varchar; reporter_id, integer; status, varchar; updated_at, datetime; p(id)]
T[field_test_events; 2000; id, integer; created_at, datetime; field_test_membership_id, integer; name, varchar; p(id)]
T[field_test_memberships; 2000; id, integer; converted, bool; created_at, datetime; experiment, varchar; participant_id, varchar; participant_type, varchar; variant, varchar; p(id)]
T[flipper_features; 2000; id, integer; created_at, datetime; "key", varchar; updated_at, datetime; p(id)]
T[flipper_gates; 2000; id, integer; created_at, datetime; feature_key, varchar; "key", varchar; updated_at, datetime; "value", varchar; p(id)]
T[follows; 2000; id, integer; blocked, bool; created_at, datetime; explicit_points, decimal; followable_id, integer; followable_type, varchar; follower_id, integer; follower_type, varchar; implicit_points, decimal; points, decimal; subscription_status, varchar; updated_at, datetime; p(id)]
T[follows_new; 2000; id, integer; blocked, bool; created_at, datetime; explicit_points, decimal; followable_id, integer; followable_type, varchar; follower_id, integer; follower_type, varchar; implicit_points, decimal; points, decimal; subscription_status_int, varchar; updated_at, datetime; p(id)]
T[follows_storage; 2000; id, integer; blocked, bool; created_at, datetime; explicit_points, decimal; followable_id, integer; followable_type, varchar; follower_id, integer; follower_type, varchar; implicit_points, decimal; points, decimal; subscription_status, varchar; updated_at, datetime; p(id)]
T[github_issues; 2000; id, integer; category, varchar; created_at, datetime; issue_serialized, varchar; processed_html, varchar; updated_at, datetime; url, varchar; p(id)]
T[github_issues_storage; 2000; id, integer; category, varchar; created_at, datetime; issue_serialized, varchar; processed_html, varchar; updated_at, datetime; url, varchar; p(id)]
T[github_repos; 2000; id, integer; additional_note, varchar; bytes_size, integer; created_at, datetime; description, varchar; featured, bool; fork, bool; github_id_code, integer; info_hash, varchar; "language", varchar; name, varchar; priority, integer; stargazers_count, integer; updated_at, datetime; url, varchar; user_id, integer; watchers_count, integer; p(id)]
T[html_variant_successes; 2000; id, integer; article_id, integer; created_at, datetime; html_variant_id, integer; updated_at, datetime; p(id)]
T[html_variant_trials; 2000; id, integer; article_id, integer; created_at, datetime; html_variant_id, integer; updated_at, datetime; p(id)]
T[html_variants; 2000; id, integer; approved, bool; created_at, datetime; "group", varchar; html, varchar; name, varchar; published, bool; success_rate, decimal; target_tag, varchar; updated_at, datetime; user_id, integer; p(id)]
T[html_variants_new; 2000; id, integer; approved, bool; created_at, datetime; group_int, varchar; html, varchar; name, varchar; published, bool; success_rate, decimal; target_tag, varchar; updated_at, datetime; user_id, integer; p(id)]
T[html_variants_storage; 2000; id, integer; approved, bool; created_at, datetime; "group", varchar; html, varchar; name, varchar; published, bool; success_rate, decimal; target_tag, varchar; updated_at, datetime; user_id, integer; p(id)]
T[identities; 2000; id, integer; auth_data_dump, varchar; created_at, datetime; provider, varchar; secret, varchar; token, varchar; uid, varchar; updated_at, datetime; user_id, integer; p(id)]
T[identities_new; 2000; id, integer; auth_data_dump, varchar; created_at, datetime; provider_int, varchar; secret, varchar; token, varchar; uid, varchar; updated_at, datetime; user_id, integer; p(id)]
T[identities_storage; 2000; id, integer; auth_data_dump, varchar; created_at, datetime; provider, varchar; secret, varchar; token, varchar; uid, varchar; updated_at, datetime; user_id, integer; p(id)]
T[mentions; 2000; id, integer; created_at, datetime; mentionable_id, integer; mentionable_type, varchar; updated_at, datetime; user_id, integer; p(id)]
T[mentions_new; 2000; id, integer; created_at, datetime; mentionable_id, integer; mentionable_type_int, varchar; updated_at, datetime; user_id, integer; p(id)]
T[mentions_storage; 2000; id, integer; created_at, datetime; mentionable_id, integer; mentionable_type, varchar; updated_at, datetime; user_id, integer; p(id)]
T[messages; 2000; id, integer; chat_action, varchar; chat_channel_id, integer; created_at, datetime; edited_at, datetime; message_html, varchar; message_markdown, varchar; updated_at, datetime; user_id, integer; p(id)]
T[navigation_links; 2000; id, integer; created_at, datetime; display_only_when_signed_in, bool; icon, varchar; name, varchar; "position", integer; section, integer; updated_at, datetime; url, varchar; p(id)]
T[navigation_links_storage; 2000; id, integer; created_at, datetime; display_only_when_signed_in, bool; icon, varchar; name, varchar; "position", integer; section, integer; updated_at, datetime; url, varchar; p(id)]
T[notes; 2000; id, integer; author_id, integer; content, varchar; created_at, datetime; noteable_id, integer; noteable_type, varchar; reason, varchar; updated_at, datetime; p(id)]
T[notes_new; 2000; id, integer; author_id, integer; content, varchar; created_at, datetime; noteable_id, integer; noteable_type_int, varchar; reason, varchar; updated_at, datetime; p(id)]
T[notes_storage; 2000; id, integer; author_id, integer; content, varchar; created_at, datetime; noteable_id, integer; noteable_type, varchar; reason, varchar; updated_at, datetime; p(id)]
T[notification_subscriptions; 2000; id, integer; config, varchar; created_at, datetime; notifiable_id, integer; notifiable_type, varchar; updated_at, datetime; user_id, integer; p(id)]
T[notification_subscriptions_new; 2000; id, integer; config, varchar; created_at, datetime; notifiable_id, integer; notifiable_type_int, varchar; updated_at, datetime; user_id, integer; p(id)]
T[notification_subscriptions_storage; 2000; id, integer; config, varchar; created_at, datetime; notifiable_id, integer; notifiable_type, varchar; updated_at, datetime; user_id, integer; p(id)]
T[notifications; 2000; id, integer; action, varchar; created_at, datetime; json_data, varchar; notifiable_id, integer; notifiable_type, varchar; notified_at, datetime; organization_id, integer; read, bool; updated_at, datetime; user_id, integer; p(id)]
T[oauth_access_grants; 2000; id, integer; application_id, integer; created_at, datetime; expires_in, integer; redirect_uri, varchar; resource_owner_id, integer; revoked_at, datetime; scopes, varchar; token, varchar; p(id)]
T[oauth_access_tokens; 2000; id, integer; application_id, integer; created_at, datetime; expires_in, integer; previous_refresh_token, varchar; refresh_token, varchar; resource_owner_id, integer; revoked_at, datetime; scopes, varchar; token, varchar; p(id)]
T[oauth_applications; 2000; id, integer; confidential, bool; created_at, datetime; name, varchar; redirect_uri, varchar; scopes, varchar; secret, varchar; uid, varchar; updated_at, datetime; p(id)]
T[organization_memberships; 2000; id, integer; created_at, datetime; organization_id, integer; type_of_user, varchar; updated_at, datetime; user_id, integer; user_title, varchar; p(id)]
T[organization_memberships_new; 2000; id, integer; created_at, datetime; organization_id, integer; type_of_user_int, varchar; updated_at, datetime; user_id, integer; user_title, varchar; p(id)]
T[organization_memberships_storage; 2000; id, integer; created_at, datetime; organization_id, integer; type_of_user, varchar; updated_at, datetime; user_id, integer; user_title, varchar; p(id)]
T[organizations; 2000; id, integer; articles_count, integer; bg_color_hex, varchar; company_size, varchar; created_at, datetime; credits_count, integer; cta_body_markdown, varchar; cta_button_text, varchar; cta_button_url, varchar; cta_processed_html, varchar; dark_nav_image, varchar; email, varchar; github_username, varchar; last_article_at, datetime; latest_article_updated_at, datetime; location, varchar; name, varchar; nav_image, varchar; old_old_slug, varchar; old_slug, varchar; profile_image, varchar; profile_updated_at, datetime; proof, varchar; secret, varchar; slug, varchar; spent_credits_count, integer; story, varchar; summary, varchar; tag_line, varchar; tech_stack, varchar; text_color_hex, varchar; twitter_username, varchar; unspent_credits_count, integer; updated_at, datetime; url, varchar; p(id)]
T[page_views; 2000; id, integer; article_id, integer; counts_for_number_of_views, integer; created_at, datetime; domain, varchar; "path", varchar; referrer, varchar; time_tracked_in_seconds, integer; updated_at, datetime; user_agent, varchar; user_id, integer; p(id)]
T[pages; 2000; id, integer; body_html, varchar; body_json, varchar; body_markdown, varchar; created_at, datetime; description, varchar; is_top_level_path, bool; landing_page, bool; processed_html, varchar; slug, varchar; social_image, varchar; template, varchar; title, varchar; updated_at, datetime; p(id)]
T[pages_storage; 2000; id, integer; body_html, varchar; body_json, varchar; body_markdown, varchar; created_at, datetime; description, varchar; is_top_level_path, bool; landing_page, bool; processed_html, varchar; slug, varchar; social_image, varchar; template, varchar; title, varchar; updated_at, datetime; p(id)]
T[podcast_episode_appearances; 2000; id, integer; approved, bool; created_at, datetime; featured_on_user_profile, bool; podcast_episode_id, integer; "role", varchar; updated_at, datetime; user_id, integer; p(id)]
T[podcast_episode_appearances_storage; 2000; id, integer; approved, bool; created_at, datetime; featured_on_user_profile, bool; podcast_episode_id, integer; "role", varchar; updated_at, datetime; user_id, integer; p(id)]
T[podcast_episodes; 2000; id, integer; any_comments_hidden, bool; body, varchar; comments_count, integer; created_at, datetime; duration_in_seconds, integer; guid, varchar; https, bool; image, varchar; itunes_url, varchar; media_url, varchar; podcast_id, integer; processed_html, varchar; published_at, datetime; quote, varchar; reachable, bool; reactions_count, integer; slug, varchar; social_image, varchar; status_notice, varchar; subtitle, varchar; summary, varchar; title, varchar; updated_at, datetime; website_url, varchar; p(id)]
T[podcast_ownerships; 2000; id, integer; created_at, datetime; podcast_id, integer; updated_at, datetime; user_id, integer; p(id)]
T[podcasts; 2000; id, integer; android_url, varchar; created_at, datetime; creator_id, integer; description, varchar; feed_url, varchar; image, varchar; itunes_url, varchar; main_color_hex, varchar; overcast_url, varchar; pattern_image, varchar; published, bool; reachable, bool; slug, varchar; soundcloud_url, varchar; status_notice, varchar; title, varchar; twitter_username, varchar; "unique_website_url?", bool; updated_at, datetime; website_url, varchar; p(id)]
T[poll_options; 2000; id, integer; created_at, datetime; markdown, varchar; poll_id, integer; poll_votes_count, integer; processed_html, varchar; updated_at, datetime; p(id)]
T[poll_skips; 2000; id, integer; created_at, datetime; poll_id, integer; updated_at, datetime; user_id, integer; p(id)]
T[poll_votes; 2000; id, integer; created_at, datetime; poll_id, integer; poll_option_id, integer; updated_at, datetime; user_id, integer; p(id)]
T[polls; 2000; id, integer; article_id, integer; created_at, datetime; poll_options_count, integer; poll_skips_count, integer; poll_votes_count, integer; prompt_html, varchar; prompt_markdown, varchar; updated_at, datetime; p(id)]
T[profile_field_groups; 2000; id, integer; created_at, datetime; description, varchar; name, varchar; updated_at, datetime; p(id)]
T[profile_fields; 2000; id, integer; attribute_name, varchar; created_at, datetime; description, varchar; display_area, integer; input_type, integer; label, varchar; placeholder_text, varchar; profile_field_group_id, integer; show_in_onboarding, bool; updated_at, datetime; p(id)]
T[profile_fields_storage; 2000; id, integer; attribute_name, varchar; created_at, datetime; description, varchar; display_area, integer; input_type, integer; label, varchar; placeholder_text, varchar; profile_field_group_id, integer; show_in_onboarding, bool; updated_at, datetime; p(id)]
T[profile_pins; 2000; id, integer; created_at, datetime; pinnable_id, integer; pinnable_type, varchar; profile_id, integer; profile_type, varchar; updated_at, datetime; p(id)]
T[profile_pins_new; 2000; id, integer; created_at, datetime; pinnable_id, integer; pinnable_type_int, varchar; profile_id, integer; profile_type, varchar; updated_at, datetime; p(id)]
T[profile_pins_storage; 2000; id, integer; created_at, datetime; pinnable_id, integer; pinnable_type, varchar; profile_id, integer; profile_type, varchar; updated_at, datetime; p(id)]
T[profiles; 2000; id, integer; created_at, datetime; data, varchar; location, varchar; summary, varchar; updated_at, datetime; user_id, integer; website_url, varchar; p(id)]
T[rating_votes; 2000; id, integer; article_id, integer; context, varchar; created_at, datetime; "group", varchar; rating, decimal; updated_at, datetime; user_id, integer; p(id)]
T[rating_votes_new; 2000; id, integer; article_id, integer; context_int, varchar; created_at, datetime; "group", varchar; rating, decimal; updated_at, datetime; user_id, integer; p(id)]
T[rating_votes_storage; 2000; id, integer; article_id, integer; context, varchar; created_at, datetime; "group", varchar; rating, decimal; updated_at, datetime; user_id, integer; p(id)]
T[reactions; 2000; id, integer; category, varchar; created_at, datetime; points, decimal; reactable_id, integer; reactable_type, varchar; status, varchar; updated_at, datetime; user_id, integer; p(id)]
T[reactions_new; 2000; id, integer; category, varchar; created_at, datetime; points, decimal; reactable_id, integer; reactable_type_int, varchar; status, varchar; updated_at, datetime; user_id, integer; p(id)]
T[reactions_storage; 2000; id, integer; category, varchar; created_at, datetime; points, decimal; reactable_id, integer; reactable_type, varchar; status, varchar; updated_at, datetime; user_id, integer; p(id)]
T[response_templates; 2000; id, integer; content, varchar; content_type, varchar; created_at, datetime; title, varchar; type_of, varchar; updated_at, datetime; user_id, integer; p(id)]
T[response_templates_new; 2000; id, integer; content, varchar; content_type_int, varchar; created_at, datetime; title, varchar; type_of, varchar; updated_at, datetime; user_id, integer; p(id)]
T[response_templates_storage; 2000; id, integer; content, varchar; content_type, varchar; created_at, datetime; title, varchar; type_of, varchar; updated_at, datetime; user_id, integer; p(id)]
T[roles; 2000; id, integer; created_at, datetime; name, varchar; resource_id, integer; resource_type, varchar; updated_at, datetime; p(id)]
T[roles_new; 2000; id, integer; created_at, datetime; name_int, varchar; resource_id, integer; resource_type, varchar; updated_at, datetime; p(id)]
T[roles_storage; 2000; id, integer; created_at, datetime; name, varchar; resource_id, integer; resource_type, varchar; updated_at, datetime; p(id)]
T[schema_migrations; 2000; version, varchar; p(id)]
T[settings_authentications; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[settings_campaigns; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[settings_communities; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[settings_rate_limits; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[settings_smtp; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[settings_user_experiences; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[site_configs; 2000; id, integer; created_at, datetime; updated_at, datetime; "value", varchar; var, varchar; p(id)]
T[sponsorships; 2000; id, integer; blurb_html, varchar; created_at, datetime; expires_at, datetime; featured_number, integer; instructions, varchar; instructions_updated_at, datetime; level, varchar; organization_id, integer; sponsorable_id, integer; sponsorable_type, varchar; status, varchar; tagline, varchar; updated_at, datetime; url, varchar; user_id, integer; p(id)]
T[sponsorships_new; 2000; id, integer; blurb_html, varchar; created_at, datetime; expires_at, datetime; featured_number, integer; instructions, varchar; instructions_updated_at, datetime; level_int, varchar; organization_id, integer; sponsorable_id, integer; sponsorable_type, varchar; status, varchar; tagline, varchar; updated_at, datetime; url, varchar; user_id, integer; p(id)]
T[sponsorships_storage; 2000; id, integer; blurb_html, varchar; created_at, datetime; expires_at, datetime; featured_number, integer; instructions, varchar; instructions_updated_at, datetime; level, varchar; organization_id, integer; sponsorable_id, integer; sponsorable_type, varchar; status, varchar; tagline, varchar; updated_at, datetime; url, varchar; user_id, integer; p(id)]
T[tag_adjustments; 2000; id, integer; adjustment_type, varchar; article_id, integer; created_at, datetime; reason_for_adjustment, varchar; status, varchar; tag_id, integer; tag_name, varchar; updated_at, datetime; user_id, integer; p(id)]
T[tag_adjustments_new; 2000; id, integer; adjustment_type, varchar; article_id, integer; created_at, datetime; reason_for_adjustment, varchar; status_int, varchar; tag_id, integer; tag_name, varchar; updated_at, datetime; user_id, integer; p(id)]
T[tag_adjustments_storage; 2000; id, integer; adjustment_type, varchar; article_id, integer; created_at, datetime; reason_for_adjustment, varchar; status, varchar; tag_id, integer; tag_name, varchar; updated_at, datetime; user_id, integer; p(id)]
T[taggings; 2000; id, integer; context, varchar; created_at, datetime; tag_id, integer; taggable_id, integer; taggable_type, varchar; tagger_id, integer; tagger_type, varchar; p(id)]
T[tags; 2000; id, integer; alias_for, varchar; badge_id, integer; bg_color_hex, varchar; category, varchar; created_at, datetime; hotness_score, integer; keywords_for_search, varchar; mod_chat_channel_id, integer; name, varchar; pretty_name, varchar; profile_image, varchar; requires_approval, bool; rules_html, varchar; rules_markdown, varchar; short_summary, varchar; social_image, varchar; social_preview_template, varchar; submission_template, varchar; supported, bool; taggings_count, integer; text_color_hex, varchar; updated_at, datetime; wiki_body_html, varchar; wiki_body_markdown, varchar; p(id)]
T[tweets; 2000; id, integer; created_at, datetime; extended_entities_serialized, varchar; favorite_count, integer; full_fetched_object_serialized, varchar; hashtags_serialized, varchar; in_reply_to_status_id_code, varchar; in_reply_to_user_id_code, varchar; in_reply_to_username, varchar; is_quote_status, bool; last_fetched_at, datetime; media_serialized, varchar; mentioned_usernames_serialized, varchar; profile_image, varchar; quoted_tweet_id_code, varchar; retweet_count, integer; source, varchar; text, varchar; tweeted_at, datetime; twitter_id_code, varchar; twitter_name, varchar; twitter_uid, varchar; twitter_user_followers_count, integer; twitter_user_following_count, integer; twitter_username, varchar; updated_at, datetime; urls_serialized, varchar; user_id, integer; user_is_verified, bool; p(id)]
T[user_blocks; 2000; id, integer; blocked_id, integer; blocker_id, integer; config, varchar; created_at, datetime; updated_at, datetime; p(id)]
T[user_blocks_storage; 2000; id, integer; blocked_id, integer; blocker_id, integer; config, varchar; created_at, datetime; updated_at, datetime; p(id)]
T[user_subscriptions; 2000; id, integer; author_id, integer; created_at, datetime; subscriber_email, varchar; subscriber_id, integer; updated_at, datetime; user_subscription_sourceable_id, integer; user_subscription_sourceable_type, varchar; p(id)]
T[user_subscriptions_storage; 2000; id, integer; author_id, integer; created_at, datetime; subscriber_email, varchar; subscriber_id, integer; updated_at, datetime; user_subscription_sourceable_id, integer; user_subscription_sourceable_type, varchar; p(id)]
T[users; 2000; id, integer; apple_username, varchar; articles_count, integer; available_for, varchar; badge_achievements_count, integer; behance_url, varchar; bg_color_hex, varchar; blocked_by_count, integer; blocking_others_count, integer; checked_code_of_conduct, bool; checked_terms_and_conditions, bool; comments_count, integer; confirmation_sent_at, datetime; confirmation_token, varchar; confirmed_at, datetime; created_at, datetime; credits_count, integer; current_sign_in_at, datetime; current_sign_in_ip, varchar; currently_hacking_on, varchar; currently_learning, varchar; dribbble_url, varchar; education, varchar; email, varchar; email_public, bool; employer_name, varchar; employer_url, varchar; employment_title, varchar; encrypted_password, varchar; export_requested, bool; exported_at, datetime; facebook_url, varchar; facebook_username, varchar; failed_attempts, integer; feed_fetched_at, datetime; following_orgs_count, integer; following_tags_count, integer; following_users_count, integer; github_repos_updated_at, datetime; github_username, varchar; gitlab_url, varchar; instagram_url, varchar; invitation_accepted_at, datetime; invitation_created_at, datetime; invitation_limit, integer; invitation_sent_at, datetime; invitation_token, varchar; invitations_count, integer; invited_by_id, integer; invited_by_type, varchar; last_article_at, datetime; last_comment_at, datetime; last_followed_at, datetime; last_moderation_notification, datetime; last_notification_activity, datetime; last_onboarding_page, varchar; last_reacted_at, datetime; last_sign_in_at, datetime; last_sign_in_ip, varchar; latest_article_updated_at, datetime; linkedin_url, varchar; location, varchar; locked_at, datetime; mastodon_url, varchar; medium_url, varchar; monthly_dues, integer; mostly_work_with, varchar; name, varchar; old_old_username, varchar; old_username, varchar; onboarding_package_requested, bool; organization_info_updated_at, datetime; payment_pointer, varchar; profile_image, varchar; profile_updated_at, datetime; rating_votes_count, integer; reactions_count, integer; registered, bool; registered_at, datetime; remember_created_at, datetime; remember_token, varchar; reputation_modifier, decimal; reset_password_sent_at, datetime; reset_password_token, varchar; saw_onboarding, bool; score, integer; secret, varchar; sign_in_count, integer; signup_cta_variant, varchar; spent_credits_count, integer; stackoverflow_url, varchar; stripe_id_code, varchar; subscribed_to_user_subscriptions_count, integer; summary, varchar; text_color_hex, varchar; twitch_url, varchar; twitter_username, varchar; unconfirmed_email, varchar; unlock_token, varchar; unspent_credits_count, integer; updated_at, datetime; username, varchar; website_url, varchar; workshop_expiration, datetime; youtube_url, varchar; p(id)]
T[users_gdpr_delete_requests; 2000; id, integer; created_at, datetime; email, varchar; updated_at, datetime; user_id, integer; username, varchar; p(id)]
T[users_notification_settings; 2000; id, integer; created_at, datetime; email_badge_notifications, bool; email_comment_notifications, bool; email_community_mod_newsletter, bool; email_connect_messages, bool; email_digest_periodic, bool; email_follower_notifications, bool; email_membership_newsletter, bool; email_mention_notifications, bool; email_newsletter, bool; email_tag_mod_newsletter, bool; email_unread_notifications, bool; mobile_comment_notifications, bool; mod_roundrobin_notifications, bool; reaction_notifications, bool; updated_at, datetime; user_id, integer; welcome_notifications, bool; p(id)]
T[users_roles; 2000; role_id, integer; user_id, integer; p(id)]
T[users_settings; 2000; id, integer; brand_color1, varchar; brand_color2, varchar; config_font, integer; config_navbar, integer; config_theme, integer; created_at, datetime; display_announcements, bool; display_email_on_profile, bool; display_sponsors, bool; editor_version, integer; experience_level, integer; feed_mark_canonical, bool; feed_referential_link, bool; feed_url, varchar; inbox_guidelines, varchar; inbox_type, integer; permit_adjacent_sponsors, bool; updated_at, datetime; user_id, integer; p(id)]
T[users_suspended_usernames; 2000; username_hash, varchar; created_at, datetime; updated_at, datetime; p(id)]
T[webhook_endpoints; 2000; id, integer; created_at, datetime; events, varchar; oauth_application_id, integer; source, varchar; target_url, varchar; updated_at, datetime; user_id, integer; p(id)]
D[articles.video_state; 0; 15; 100; (); ]
D[broadcasts.type_of; 0; 15; 100; (); ]
D[broadcasts.banner_style; 0; 15; 100; (); ]
D[chat_channels.channel_type; 0; 15; 100; (); ]
D[chat_channels.status; 0; 15; 100; (); ]
D[chat_channel_memberships.role; 0; 15; 100; (); ]
D[chat_channel_memberships.status; 0; 15; 100; (); ]
D[comments.commentable_type; 0; 15; 100; ('Article', 'Article', 'PodcastEpisode'); ]
D[consumer_apps.platform; 0; 15; 100; (); ]
D[credits.purchase_type; 0; 15; 100; ('Listing'); ]
D[devices.platform; 0; 15; 100; (); ]
D[display_ads.placement_area; 0; 15; 100; (); ]
D[display_ad_events.category; 0; 15; 100; (); ]
D[display_ad_events.context_type; 0; 15; 100; (); ]
D[email_authorizations.type_of; 0; 15; 100; (); ]
D[feedback_messages.category; 0; 15; 100; (); ]
D[feedback_messages.status; 0; 15; 100; (); ]
D[follows.blocked; 0; 15; 100; (); ]
D[follows.subscription_status; 0; 15; 100; (); ]
D[github_issues.category; 0; 15; 100; (); ]
D[html_variants.group; 0; 15; 100; (); ]
D[identities.provider; 0; 15; 100; (); ]
D[mentions.mentionable_type; 0; 15; 100; ('Article', 'Comment'); ]
D[navigation_links.display_only_when_signed_in; 0; 15; 100; (); ]
D[notes.noteable_type; 0; 15; 100; ('FeedbackMessage', 'User'); ]
D[notification_subscriptions.config; 0; 15; 100; (); ]
D[notification_subscriptions.notifiable_type; 0; 15; 100; (); ]
D[notification_subscriptions.notifiable_type; 0; 15; 100; ('Article', 'Article', 'Broadcast', 'Comment', 'Comment', 'TagAdjustment'); ]
D[organization_memberships.type_of_user; 0; 15; 100; (); ]
D[pages.template; 0; 15; 100; (); ]
D[podcast_episode_appearances.role; 0; 15; 100; (); ]
D[profile_fields.show_in_onboarding; 0; 15; 100; (); ]
D[profile_pins.profile_type; 0; 15; 100; (); ]
D[profile_pins.pinnable_type; 0; 15; 100; (); ]
D[profile_pins.pinnable_type; 0; 15; 100; ('Article'); ]
D[profile_pins.profile_type; 0; 15; 100; ('Organization', 'User'); ]
D[rating_votes.context; 0; 15; 100; (); ]
D[rating_votes.group; 0; 15; 100; (); ]
D[reactions.category; 0; 15; 100; (); ]
D[reactions.reactable_type; 0; 15; 100; (); ]
D[reactions.status; 0; 15; 100; (); ]
D[response_templates.type_of; 0; 15; 100; (); ]
D[response_templates.content_type; 0; 15; 100; (); ]
D[roles.resource_type; 0; 15; 100; (); ]
D[roles.name; 0; 15; 100; (); ]
D[sponsorships.level; 0; 15; 100; (); ]
D[sponsorships.status; 0; 15; 100; (); ]
D[tag_adjustments.adjustment_type; 0; 15; 100; (); ]
D[tag_adjustments.status; 0; 15; 100; (); ]
D[user_blocks.config; 0; 15; 100; (); ]
D[users_notification_settings.email_digest_periodic; 0; 15; 100; (); ]
D[users_settings.feed_referential_link; 0; 15; 100; (); ]
