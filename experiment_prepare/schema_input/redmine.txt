T[ar_internal_metadata; 2000; key, varchar; "value", varchar; created_at, datetime; updated_at, datetime; p(id)]
T[attachments; 2000; id, integer; container_id, integer; container_type, varchar; filename, varchar; disk_filename, varchar; filesize, integer; content_type, varchar; digest, varchar; downloads, integer; author_id, integer; created_on, datetime; description, varchar; disk_directory, varchar; p(id)]
T[auth_sources; 2000; id, integer; type, varchar; name, varchar; host, varchar; port, integer; account, varchar; account_password, varchar; base_dn, varchar; attr_login, varchar; attr_firstname, varchar; attr_lastname, varchar; attr_mail, varchar; onthefly_register, bool; tls, bool; "filter", varchar; timeout, integer; verify_peer, bool; p(id)]
T[boards; 2000; id, integer; project_id, integer; name, varchar; description, varchar; "position", integer; topics_count, integer; messages_count, integer; last_message_id, integer; parent_id, integer; p(id)]
T[changes; 2000; id, integer; changeset_id, integer; action, varchar; path, varchar; from_path, varchar; from_revision, varchar; revision, varchar; branch, varchar; p(id)]
T[changeset_parents; 2000; changeset_id, integer; parent_id, integer; p(id)]
T[changesets; 2000; id, integer; repository_id, integer; revision, varchar; committer, varchar; committed_on, datetime; comments, varchar; commit_date, date; scmid, varchar; user_id, integer; p(id)]
T[changesets_issues; 2000; changeset_id, integer; issue_id, integer; p(id)]
T[comments; 2000; id, integer; commented_type, varchar; commented_id, integer; author_id, integer; content, varchar; created_on, datetime; updated_on, datetime; p(id)]
T[custom_field_enumerations; 2000; id, integer; custom_field_id, integer; name, varchar; active, bool; "position", integer; p(id)]
T[custom_fields; 2000; id, integer; type, varchar; name, varchar; field_format, varchar; possible_values, varchar; regexp, varchar; min_length, integer; max_length, integer; is_required, bool; is_for_all, bool; is_filter, bool; "position", integer; searchable, bool; editable, bool; visible, bool; multiple, bool; format_store, varchar; description, varchar; p(id)]
T[custom_fields_projects; 2000; custom_field_id, integer; project_id, integer; p(id)]
T[custom_fields_roles; 2000; custom_field_id, integer; role_id, integer; p(id)]
T[custom_fields_trackers; 2000; custom_field_id, integer; tracker_id, integer; p(id)]
T[custom_values; 2000; id, integer; customized_type, varchar; customized_id, integer; custom_field_id, integer; "value", varchar; p(id)]
T[documents; 2000; id, integer; project_id, integer; category_id, integer; title, varchar; description, varchar; created_on, datetime; p(id)]
T[email_addresses; 2000; id, integer; user_id, integer; address, varchar; is_default, bool; notify, bool; created_on, datetime; updated_on, datetime; p(id)]
T[enabled_modules; 2000; id, integer; project_id, integer; name, varchar; p(id)]
T[enumerations; 2000; id, integer; name, varchar; "position", integer; is_default, bool; type, varchar; active, bool; project_id, integer; parent_id, integer; position_name, varchar; p(id)]
T[groups_users; 2000; group_id, integer; user_id, integer; p(id)]
T[import_items; 2000; id, integer; import_id, integer; "position", integer; obj_id, integer; message, varchar; unique_id, varchar; p(id)]
T[imports; 2000; id, integer; type, varchar; user_id, integer; filename, varchar; settings, varchar; total_items, integer; finished, bool; created_at, datetime; updated_at, datetime; p(id)]
T[issue_categories; 2000; id, integer; project_id, integer; name, varchar; assigned_to_id, integer; p(id)]
T[issue_relations; 2000; id, integer; issue_from_id, integer; issue_to_id, integer; relation_type, varchar; delay, integer; p(id)]
T[issue_statuses; 2000; id, integer; name, varchar; is_closed, bool; "position", integer; default_done_ratio, integer; p(id)]
T[issues; 2000; id, integer; tracker_id, integer; project_id, integer; subject, varchar; description, varchar; due_date, date; category_id, integer; status_id, integer; assigned_to_id, integer; priority_id, integer; fixed_version_id, integer; author_id, integer; lock_version, integer; created_on, datetime; updated_on, datetime; start_date, date; done_ratio, integer; estimated_hours, decimal; parent_id, integer; root_id, integer; lft, integer; rgt, integer; is_private, bool; closed_on, datetime; p(id)]
T[journal_details; 2000; id, integer; journal_id, integer; property, varchar; prop_key, varchar; old_value, varchar; "value", varchar; p(id)]
T[journals; 2000; id, integer; journalized_id, integer; journalized_type, varchar; user_id, integer; notes, varchar; created_on, datetime; private_notes, bool; p(id)]
T[member_roles; 2000; id, integer; member_id, integer; role_id, integer; inherited_from, integer; p(id)]
T[members; 2000; id, integer; user_id, integer; project_id, integer; created_on, datetime; mail_notification, bool; p(id)]
T[messages; 2000; id, integer; board_id, integer; parent_id, integer; subject, varchar; content, varchar; author_id, integer; replies_count, integer; last_reply_id, integer; created_on, datetime; updated_on, datetime; locked, bool; sticky, integer; p(id)]
T[news; 2000; id, integer; project_id, integer; title, varchar; summary, varchar; description, varchar; author_id, integer; created_on, datetime; comments_count, integer; p(id)]
T[open_id_authentication_associations; 2000; id, integer; issued, integer; lifetime, integer; handle, varchar; assoc_type, varchar; server_url, varchar; secret, varchar; p(id)]
T[open_id_authentication_nonces; 2000; id, integer; "timestamp", integer; server_url, varchar; salt, varchar; p(id)]
T[projects; 2000; id, integer; name, varchar; description, varchar; homepage, varchar; is_public, bool; parent_id, integer; created_on, datetime; updated_on, datetime; identifier, varchar; status, integer; lft, integer; rgt, integer; inherit_members, bool; default_version_id, integer; default_assigned_to_id, integer; p(id)]
T[projects_trackers; 2000; project_id, integer; tracker_id, integer; p(id)]
T[queries; 2000; id, integer; project_id, integer; name, varchar; filters, varchar; user_id, integer; column_names, varchar; sort_criteria, varchar; group_by, varchar; type, varchar; visibility, integer; options, varchar; p(id)]
T[queries_roles; 2000; query_id, integer; role_id, integer; p(id)]
T[repositories; 2000; id, integer; project_id, integer; url, varchar; login, varchar; password, varchar; root_url, varchar; type, varchar; path_encoding, varchar; log_encoding, varchar; extra_info, varchar; identifier, varchar; is_default, bool; created_on, datetime; p(id)]
T[roles; 2000; id, integer; name, varchar; "position", integer; assignable, bool; builtin, integer; permissions, varchar; issues_visibility, varchar; users_visibility, varchar; time_entries_visibility, varchar; all_roles_managed, bool; settings, varchar; p(id)]
T[roles_managed_roles; 2000; role_id, integer; managed_role_id, integer; p(id)]
T[schema_migrations; 2000; version, varchar; p(id)]
T[settings; 2000; id, integer; name, varchar; "value", varchar; updated_on, datetime; p(id)]
T[time_entries; 2000; id, integer; project_id, integer; user_id, integer; issue_id, integer; hours, decimal; comments, varchar; activity_id, integer; spent_on, date; tyear, integer; tmonth, integer; tweek, integer; created_on, datetime; updated_on, datetime; author_id, integer; p(id)]
T[tokens; 2000; id, integer; user_id, integer; action, varchar; "value", varchar; created_on, datetime; updated_on, datetime; p(id)]
T[trackers; 2000; id, integer; name, varchar; is_in_chlog, bool; "position", integer; is_in_roadmap, bool; fields_bits, integer; default_status_id, integer; description, varchar; p(id)]
T[user_preferences; 2000; id, integer; user_id, integer; others, varchar; hide_mail, bool; time_zone, varchar; p(id)]
T[users; 2000; id, integer; login, varchar; hashed_password, varchar; firstname, varchar; lastname, varchar; admin, bool; status, integer; last_login_on, datetime; "language", varchar; auth_source_id, integer; created_on, datetime; updated_on, datetime; type, varchar; identity_url, varchar; mail_notification, varchar; salt, varchar; must_change_passwd, bool; passwd_changed_on, datetime; twofa_scheme, varchar; twofa_totp_key, varchar; twofa_totp_last_used_at, integer; p(id)]
T[versions; 2000; id, integer; project_id, integer; name, varchar; description, varchar; effective_date, date; created_on, datetime; updated_on, datetime; wiki_page_title, varchar; status, varchar; sharing, varchar; p(id)]
T[watchers; 2000; id, integer; watchable_type, varchar; watchable_id, integer; user_id, integer; p(id)]
T[wiki_content_versions; 2000; id, integer; wiki_content_id, integer; page_id, integer; author_id, integer; data, varchar; compression, varchar; comments, varchar; updated_on, datetime; version, integer; p(id)]
T[wiki_contents; 2000; id, integer; page_id, integer; author_id, integer; comments, varchar; updated_on, datetime; version, integer; p(id)]
T[wiki_pages; 2000; id, integer; wiki_id, integer; title, varchar; created_on, datetime; protected, bool; parent_id, integer; p(id)]
T[wiki_redirects; 2000; id, integer; wiki_id, integer; title, varchar; redirects_to, varchar; created_on, datetime; redirects_to_wiki_id, integer; p(id)]
T[wikis; 2000; id, integer; project_id, integer; start_page, varchar; status, integer; p(id)]
D[auth_sources.type; 0; 15; 100; ('AuthSource', 'AuthSourceLdap'); ]
D[comments.commented_type; 0; 15; 100; ('News'); ]
D[custom_fields.field_format; 0; 15; 100; (); ]
D[custom_fields.type; 0; 15; 100; ('CustomField', 'DocumentCategoryCustomField', 'DocumentCustomField', 'GroupCustomField', 'IssueCustomField', 'IssuePriorityCustomField', 'ProjectCustomField', 'TimeEntryActivityCustomField', 'TimeEntryCustomField', 'UserCustomField', 'VersionCustomField'); ]
D[enumerations.type; 0; 15; 100; ('Enumeration', 'DocumentCategory', 'IssuePriority', 'TimeEntryActivity'); ]
D[imports.type; 0; 15; 100; ('Import', 'IssueImport', 'TimeEntryImport', 'UserImport'); ]
D[issue_relations.relation_type; 0; 15; 100; ('relates', 'duplicates', 'duplicated', 'blocks', 'blocked', 'precedes', 'follows', 'copied_to', 'copied_from'); ]
D[journals.journalized_type; 0; 15; 100; ('Issue'); ]
D[users.type; 0; 15; 100; ('Principal', 'Group', 'GroupBuiltin', 'GroupAnonymous', 'GroupNonMember', 'User', 'AnonymousUser'); ]
D[users.mail_notification; 0; 15; 100; ('all', 'selected', 'only_my_events', 'only_assigned', 'only_owner', 'none'); ]
D[queries.visibility; 0; 15; 100; (); ]
D[queries.type; 0; 15; 100; ('Query', 'IssueQuery', 'ProjectQuery', 'TimeEntryQuery'); ]
D[repositories.type; 0; 15; 100; ('Repository', 'Repository::Bazaar', 'Repository::Cvs', 'Repository::Filesystem', 'Repository::Git', 'Repository::Mercurial', 'Repository::Subversion'); ]
D[settings.name; 0; 15; 100; (); ]
D[versions.status; 0; 15; 100; ('open', 'locked', 'closed'); ]
D[versions.sharing; 0; 15; 100; ('none', 'descendants', 'hierarchy', 'tree', 'system'); ]
D[workflows.type; 0; 15; 100; ('WorkflowRule', 'WorkflowPermission', 'WorkflowTransition'); ]
